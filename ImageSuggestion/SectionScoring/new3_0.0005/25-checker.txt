Section:3
	Ｆｌａｇ：：０１００
	コーディング規約のメリット・デメリット
	コーディング規約のメリットはプログラマの個性を殺して均質なプログラムを作ること、過去の知識や経験から得られたバグの発生源となりやすいコーディングの防止、インデントやコメントの基準を決めて見やすさ保守性の高さを求める・・・等々です。
	一方、デメリットですが、使える文法を制限してスキルの高いプログラマの生産性を殺したり、過去のプログラムとの互換性を追求するあまり新しい機能の使用を制限したり・・・等々があります。
	一般に、大きなプロジェクトほどコーディング規約の内容は強制的、制限的です。
	これは、大きなプロジェクトだと、スキルの低い人もメンバーに入っていることが多く、コーディングを自由にやらせると、品質が落ちたり、プログラムが見づらく保守性が悪くなるったりするためです。
Score:0.000688714247425
EACH_TAG_SCORE:
	image:9.18596286751e-05
	table:0.000191050395922
	graph:0.000216208619336
	flow:0.000189595603492
PARA:
Clueword:
	やる:[0.0000,0.0009,0.0185,0.0000]
	低い:[0.0000,0.0037,0.0000,0.0134]
	多い:[0.0037,0.0073,0.0000,0.0246]
	なる:[0.0000,0.0000,0.0000,0.0022]
	悪い:[0.0000,0.0005,0.0000,0.0000]
	する:[0.0000,0.0043,0.0084,0.0000]
	いる:[0.0017,0.0005,0.0000,0.0000]
	大きな:[0.0000,0.0029,0.0000,0.0044]
	メリット:[0.0126,0.0000,0.0000,0.0000]
	作る:[0.0017,0.0000,0.0032,0.0000]
	ます:[0.0017,0.0000,0.0061,0.0000]
	から:[0.0017,0.0005,0.0293,0.0016]
	デメリット:[0.0130,0.0016,0.0000,0.0000]
	一方:[0.0207,0.0000,0.0000,0.0045]
	高い:[0.0000,0.0014,0.0000,0.0163]
	られる:[0.0017,0.0000,0.0000,0.0000]
	過去:[0.0000,0.0000,0.0039,0.0016]
	ほど:[0.0000,0.0010,0.0000,0.0022]
	基準:[0.0037,0.0000,0.0000,0.0000]
	一般に:[0.0000,0.0009,0.0000,0.0000]
	的だ:[0.0053,0.0072,0.0000,0.0044]
	発生:[0.0000,0.0000,0.0000,0.0022]
	内容:[0.0000,0.0009,0.0000,0.0000]
	やすい:[0.0025,0.0000,0.0000,0.0016]
True-Positive

Section:5
	Ｆｌａｇ：：００００
	コーディング規約を作るときの注意
	続く．．
	ＶＢ．ＮＥＴ版のサンプルを作ってみました
	たたき台程度の内容ですが、参考になればと思います。
	あと、用例も入れたほうがいいですね。
Score:0.00064115562683
EACH_TAG_SCORE:
	image:8.77699969364e-05
	table:7.5794015188e-05
	graph:0.000109214598827
	flow:0.000368377015878
PARA:
Clueword:
	続く:[0.0000,0.0000,0.0118,0.0000]
	程度:[0.0025,0.0063,0.0021,0.0085]
	とき:[0.0017,0.0000,0.0000,0.0000]
	なる:[0.0000,0.0000,0.0000,0.0022]
	作る:[0.0017,0.0000,0.0032,0.0000]
	あと:[0.0000,0.0000,0.0130,0.0000]
	ます:[0.0017,0.0000,0.0061,0.0000]
	内容:[0.0000,0.0009,0.0000,0.0000]
	ほう:[0.0000,0.0013,0.0000,0.0000]
False-Positive

Section:4
	Ｆｌａｇ：：０１００
	コーディング規約の内容
	コーディング規約の内容は、プロジェクトの規模や特性、参加メンバーのスキル、使用言語などにより変更すべきですが、たいていこんな内容が書かれています。
	目的
	プロジェクトの構成
	命名規則
	コーディングスタイル
	禁止事項
	制限事項
	推奨事項
	目的
	そのコーディング規約の適用範囲、なぜ必要なのか、それを守ることによりどんなメリットがあるかを書く。
	プロジェクトの構成
	コーディングにはあまり関係なさそうな内容ですが、ソースプログラムの先頭にコメントを入れたりするのに使います。
	プロジェクトの名称などはあらかじめ決まっていることが多いので、もし、そうなら一覧表を付けます。
	メタ情報の指定方法、フォルダの構成方法なども決めておきます。
	命名規則
	変数、定数、メソッド（関数）、クラスなどの名前の付け方の基準を決める。
	変数名の先頭は小文字だとか、クラス名の先頭は大文字だとかがよく使われます。
	コーディングスタイル
	コーディングスタイルはインデントの仕方とか、中かっこの位置とか、コメントの位置や内容とかを決めておきます。
	リソース
	エラーメッセージなどはハードコーディングしないで、よくリソースファイルのインデックスを指定したりします。
	もし使うなら、リソースの使用についての説明、制限なども書いておきましょう。
	（あまり大きいリソースの管理はたいへんなのでバランスを考えたほうがいいです。特にＩＤＥを使う場合。）
	禁止事項
	使ってはいけない文法や今はほとんど使われない保守用になっているものとかを揚げておきます。
	一律に禁止でなく、場合によっては例外も設けておきます。
	（なぜ禁止なのか、その理由も必ず書きます）
	制限事項
	あまり推奨されない機能、コーディング方法、クラスなどを揚げておきます。
	また、その条件を明示します。
	推奨事項
	好ましいコーディング方法や複数の似たようなクラスや関数などがある場合、どちらが推奨されるかを書いておきます。
Score:0.000593744548842
EACH_TAG_SCORE:
	image:0.000142896509962
	table:0.000252641872695
	graph:9.92075403674e-05
	flow:9.89986258181e-05
PARA:
Clueword:
	れる:[0.0017,0.0005,0.0000,0.0097]
	よる:[0.0037,0.0000,0.0000,0.0000]
	仕方:[0.0025,0.0023,0.0154,0.0000]
	なら:[0.0041,0.0000,0.0000,0.0000]
	なる:[0.0000,0.0000,0.0000,0.0022]
	方法:[0.0187,0.0065,0.0405,0.0000]
	する:[0.0000,0.0043,0.0084,0.0000]
	付ける:[0.0000,0.0000,0.0032,0.0000]
	いる:[0.0017,0.0005,0.0000,0.0000]
	バランス:[0.0000,0.0082,0.0000,0.0091]
	ほとんど:[0.0000,0.0029,0.0000,0.0050]
	ようだ:[0.0000,0.0076,0.0000,0.0000]
	メリット:[0.0126,0.0000,0.0000,0.0000]
	多い:[0.0037,0.0073,0.0000,0.0246]
	条件:[0.0234,0.0014,0.0000,0.0000]
	場合:[0.1120,0.0041,0.0000,0.0066]
	ます:[0.0017,0.0000,0.0061,0.0000]
	書く:[0.0000,0.0027,0.0061,0.0000]
	関係:[0.0062,0.0130,0.0000,0.0016]
	たいてい:[0.0000,0.0000,0.0000,0.0044]
	大きい:[0.0070,0.0079,0.0000,0.0096]
	構成:[0.0021,0.0043,0.0000,0.0101]
	範囲:[0.0000,0.0166,0.0000,0.0000]
	考える:[0.0017,0.0000,0.0000,0.0000]
	位置:[0.0000,0.0217,0.0000,0.0000]
	一覧:[0.0033,0.0045,0.0000,0.0000]
	事項:[0.0017,0.0009,0.0000,0.0000]
	内容:[0.0000,0.0009,0.0000,0.0000]
	ほう:[0.0000,0.0013,0.0000,0.0000]
	使う:[0.0000,0.0000,0.0032,0.0000]
	基準:[0.0037,0.0000,0.0000,0.0000]
True-Positive

Section:2
	Ｆｌａｇ：：１０００
	内容は変数などの命名規則、禁止事項（例えばｇｏｔｏ文はダメとか）、コメントの付け方とか、いろいろプロジェクトの特性やその会社の文化などで変わります。
Score:0.000395064262631
EACH_TAG_SCORE:
	image:0.00021800625238
	table:6.86050596924e-05
	graph:0.0
	flow:0.000108452950558
PARA:
Clueword:
	ます:[0.0017,0.0000,0.0061,0.0000]
	内容:[0.0000,0.0009,0.0000,0.0000]
	付ける:[0.0000,0.0000,0.0032,0.0000]
	例えば:[0.0025,0.0167,0.0000,0.0000]
	事項:[0.0017,0.0009,0.0000,0.0000]
False-Negative

Section:1
	Ｆｌａｇ：：００００
	コーディング規約とは
	「コーディング規約」は多数のプログラマが参加するプロジェクトにおいて、プログラミング品質を均等にするために定める文書です。
Score:0.000164237560755
EACH_TAG_SCORE:
	image:6.27790953148e-05
	table:0.0
	graph:0.0
	flow:0.000101458465441
PARA:
Clueword:
	する:[0.0000,0.0043,0.0084,0.0000]
	文書:[0.0000,0.0009,0.0000,0.0000]
True-Negative

True-Negative:1
False-Positive:1
True-Positive:2
False-Negative:1
precision = 0.666667
recall = 0.666667
fvalue = 0.666667